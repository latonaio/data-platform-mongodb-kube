apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-log
spec:
  selector:
    matchLabels:
      app: mongo-log
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mongo-log
    spec:         
      nodeName: mysql-data
      containers:
        - image: mongo:6.0
          name: mongo-log
          resources:
            limits:
              memory: 512Mi
              cpu: 100m
            requests:
              memory: 100Mi
              cpu: 10m
          env:
            - name: MONGODB_USER
              value: XXXXXXXXXX
            - name: MONGODB_PASS
              value: XXXXXXXXXX
            - name: MONGO_INITDB_ROOT_USERNAME
              value: XXXXXXXXXX
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: XXXXXXXXXX
          ports:
            - containerPort: 27017
              name: mongo-log
          volumeMounts:
            - name: mongo-log-collector-persistent-storage
              mountPath: /var/lib/mongo-log-collector
      volumes:
        - name: mongo-log-collector-persistent-storage
          persistentVolumeClaim:
            claimName: mongo-log-collector-kube-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-log
spec:
  selector:
    app: mongo-log
  type: NodePort
  ports:
    - port: 27017
      nodePort: 30111
---
# mongo
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongo-log-collector-kube-pv-volume
  labels:
    type: local
  namespace: default
spec:
  storageClassName: mongo-log-collector-kube
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/mongo-log-collector-kube" # /mnt/{リポジトリ名}を指定
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-log-collector-kube-pv-claim
  namespace: default
spec:
  storageClassName: mongo-log-collector-kube
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

